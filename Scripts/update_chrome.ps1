# update_chrome.ps1
# Uppdaterar Google Chrome om det finns en nyare version och laddar upp den till Azure

$chromeDownloadURL = "https://dl.google.com/tag/s/dl/chrome/install/googlechromestandaloneenterprise64.msi"
$localChromePath = "chrome_update.msi"
$localCabPath = "chrome_update.cab"
$xmlFilePath = "UpdatesCatalog/updatescatalog.xml"

# ‚úÖ H√§mta nuvarande version fr√•n updatescatalog.xml i GitHub
Write-Host "üîÑ H√§mtar nuvarande version fr√•n updatescatalog.xml..."
if (Test-Path -Path $xmlFilePath) {
    [xml]$xmlContent = Get-Content $xmlFilePath
    $azureVersion = $xmlContent.Updates.Update.Version
} else {
    Write-Host "‚ö†Ô∏è updatescatalog.xml hittades inte! Antas vara f√∂rsta g√•ngen."
    $azureVersion = "0.0.0.0"
}

Write-Host "‚òÅÔ∏è Version p√• Azure: $azureVersion"

# ‚úÖ H√§mta senaste Chrome-version fr√•n Google
Write-Host "üîÑ H√§mtar senaste Chrome-version fr√•n Google..."
$latestVersion = (Invoke-WebRequest -Uri "https://versionhistory.googleapis.com/v1/chrome/platforms/win/channels/stable/versions/latest" | ConvertFrom-Json).version

if (-not $latestVersion) {
    Write-Error "‚ùå ERROR: Kunde inte h√§mta senaste Chrome-versionen!"
    exit 1
}

Write-Host "üåç Senaste Chrome-version: $latestVersion"

# ‚úÖ J√§mf√∂r versionerna
if ($latestVersion -eq $azureVersion) {
    Write-Host "‚úÖ Chrome √§r redan uppdaterad p√• Azure. Ingen √•tg√§rd kr√§vs."
    exit 0
}

Write-Host "üöÄ Ny version hittad! Laddar ner Chrome $latestVersion..."

# ‚úÖ Ladda ner Chrome MSI-filen
Invoke-WebRequest -Uri $chromeDownloadURL -OutFile $localChromePath

# ‚úÖ Kontrollera att nedladdningen lyckades
if (-Not (Test-Path -Path $localChromePath)) {
    Write-Error "‚ùå ERROR: Chrome MSI-filen kunde inte laddas ner!"
    exit 1
}

# ‚úÖ Skapa en CAB-fil fr√•n installationsfilen
makecab.exe /D CompressionType=LZX /D CompressionMemory=21 /D Cabinet=ON /D MaxDiskSize=0 /D ReservePerCabinetSize=8 /D ReservePerFolderSize=8 /D ReservePerDataBlockSize=8 $localChromePath $localCabPath

# ‚úÖ D√∂p om CAB-filen till chrome_update_<version>.cab
$newCabName = "chrome_update_$latestVersion.cab"
Rename-Item -Path $localCabPath -NewName $newCabName

# ‚úÖ Kontrollera att CAB-filen skapades
if (-Not (Test-Path -Path $newCabName)) {
    Write-Error "‚ùå ERROR: CAB-filen skapades INTE korrekt!"
    exit 1
}

Write-Host "‚úÖ Chrome $latestVersion CAB-fil skapad: $newCabName"
Write-Host "‚òÅÔ∏è Laddar upp CAB-filen till Azure..."

# ‚úÖ Kontrollera att Azure credentials finns
$missingSecrets = @()
if (-not $env:AZURE_STORAGE_ACCOUNT_NAME) { $missingSecrets += "AZURE_STORAGE_ACCOUNT_NAME" }
if (-not $env:AZURE_STORAGE_CONTAINER_NAME) { $missingSecrets += "AZURE_STORAGE_CONTAINER_NAME" }
if (-not $env:AZURE_STORAGE_KEY) { $missingSecrets += "AZURE_STORAGE_KEY" }

if ($missingSecrets.Count -gt 0) {
    Write-Error "‚ùå ERROR: Saknade Azure-credentials! F√∂ljande secrets saknas: $($missingSecrets -join ', ')"
    exit 1
}

# ‚úÖ Ladda upp CAB-filen till Azure
az storage blob upload `
  --container-name $env:AZURE_STORAGE_CONTAINER_NAME `
  --account-name $env:AZURE_STORAGE_ACCOUNT_NAME `
  --account-key $env:AZURE_STORAGE_KEY `
  --file "$newCabName" `
  --name "$newCabName" `
  --overwrite

Write-Host "‚úÖ Uppladdning slutf√∂rd!"

# ‚úÖ Uppdatera latest_chrome_version.txt
Set-Content -Path "latest_chrome_version.txt" -Value $latestVersion
Write-Host "‚úÖ Sparade senaste versionen i latest_chrome_version.txt"

exit 0
